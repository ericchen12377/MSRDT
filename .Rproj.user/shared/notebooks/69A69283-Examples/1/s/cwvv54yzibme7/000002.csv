"0","######Binomial RDT Design######"
"0","###Generate the prior distribution of failure probability"
"0","##Beta is conjugate prior to binomial distribution"
"0","#Get the non-informative prior Beta(1, 1)"
"0","pi <- pi_MCSim_beta(M = 5000, seed = 10, a = 1, b = 1)"
"0",""
"0","#Get the consumer's risk"
"0","n = 10"
"0","R = 0.8"
"0","c = 2"
"0","b_CR <- bconsumerrisk(n = n, c = c, pi = pi, R = R)"
"0","print(b_CR)"
"1","    "
"1","      [,1]"
"1","
[1,]"
"1"," 0.3330482"
"1","
"
"0","#         [,1]"
"0","#>[1,] 0.3330482"
"0",""
"0","##As n increases, CR decreases"
"0","#Get the optimal test sample size"
"0","thres_CR = 0.05 #CR < 0.05"
"0","b_n <- boptimal_n(c = c, pi = pi, R = R, thres_CR = thres_CR)"
"0","print(b_n)"
"1","[1]"
"1"," 24"
"1","
"
"0","######MSRDT MPCum Design######"
"0","###Generate the prior distribution of failure probability"
"0","##Dirichlet is conjugate prior to multinomial distribution"
"0","#Get the non-informative prior Dirichlet(1, 1, 1)"
"0","pi <- pi_MCSim_dirichlet(M = 5000, seed = 10, par = c(1, 1, 1))"
"0",""
"0","#Get the consumer's risk"
"0","n = 10"
"0","cvec = c(1, 1)"
"0","Rvec = c(0.8, 0.7)"
"0","MPCum_CR <- MPCum_consumerrisk(n = n, cvec = cvec, pivec = pi, Rvec = Rvec)"
"0","print(MPCum_CR)"
"1","[1]"
"1"," 0.3383538"
"1","
"
"0","#>[1] 0.3383538"
"0",""
"0","##As n increases, CR decreases"
"0","#Get the optimal test sample size"
"0","thres_CR = 0.05 #CR < 0.05"
"0","MPCum_n <- MPCum_optimal_n(cvec = cvec, pivec = pi, Rvec = Rvec, thres_CR = thres_CR)"
"2","
"
